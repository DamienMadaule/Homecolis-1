### Docker-composer partie A

#version: "3"
#services:
#  db-mongo:
#    container_name: db-mongo
#    image: mongo:latest
#    volumes:
#      - ./data:/data/db
#    ports:
#      - "27017:27017"
#    environment:
#      - MONGO_DATABASE=test
#      - MONGO_USER=root
#      - MONGO_PASSWORD=123456
#    command: mongod --auth #activation du mode authentification pour les cred's
#
#  api:
#    build: .
#    container_name: api
#    image: homecolis-api:latest
#    links:
#      - db-mongo
#    environment:
#      NODE_ENV: development
#      MONGO_HOST: 107.0.0.1 #mongodb par defaut bind_îp en 107.0.0.1 !!!!!!
#      MONGO_USER: root
#      MONGO_PASSWORD: 123456
#      MONGO_PORT: 27017
#      MONGO_DATABASE: test
#      PORT: 80
#    restart: always
#    ports:
#      - "8080:80"
#    depends_on:
#      - db-mongo

###Partie B : Modification du docker-compose pour le playbook Ansible

version: "3"
services:
#  db-mongo:
#    container_name: db-mongo
#    image: mongo:latest
#    volumes:
#      - ./data:/data/db
#    ports:
#      - "27017:27017"
#    environment:
#      - MONGO_DATABASE=test
#      - MONGO_USER=root
#      - MONGO_PASSWORD=123456
#    command: mongod --auth #activiation du mode authentification pour les cred's

  api:
    build: .
    container_name: api
    image: homecolis-api:latest
#    links:
#      - db-mongo
    environment:
      NODE_ENV: development
      #MONGO_HOST: 107.0.0.1 #mongodb par defaut bind_îp en 107.0.0.1 !!!!!!
      MONGO_HOST: 54.186.101.202
      MONGO_USER: root
      MONGO_PASSWORD: 123456
      MONGO_PORT: 27017
      MONGO_DATABASE: test
      PORT: 80
    restart: always
    ports:
      - "8080:80"
#    depends_on:
#      - db-mongo
